{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/songs.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".music_card{\\r\\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.16), 0 2px 10px 0 rgba(0, 0, 0, 0.12);\\r\\n    padding: 20px 0;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSw4RUFBOEU7SUFDOUUsZ0JBQWdCO0NBQ25CIiwiZmlsZSI6InNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubXVzaWNfY2FyZHtcclxuICAgIGJveC1zaGFkb3c6IDAgMnB4IDVweCAwIHJnYmEoMCwgMCwgMCwgMC4xNiksIDAgMnB4IDEwcHggMCByZ2JhKDAsIDAsIDAsIDAuMTIpO1xyXG4gICAgcGFkZGluZzogMjBweCAwO1xyXG59Il19 */\"","module.exports = \"<div class=\\\"\\\">\\n  <div class=\\\"container mb-6\\\">\\n    <h2 class=\\\"text-center mb-3\\\">Add a new song</h2>\\n        <form  method=\\\"POST\\\" name=\\\"addSong\\\" [formGroup]=\\\"addSong\\\" (submit)=\\\"addSongs()\\\">\\n          <div class=\\\"input-group mb-3\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Song Name\\\" aria-label=\\\"songname\\\" formControlName=\\\"songname\\\">\\n          </div>\\n          <div class=\\\"input-group mb-3\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Artiste\\\" aria-label=\\\"artist\\\" formControlName=\\\"artiste\\\">\\n          </div>\\n          <div class=\\\"input-group mb-3\\\">\\n            <select class=\\\"custom-select\\\" formControlName=\\\"playlist\\\">\\n                <option selected>Choose Playlist...</option>\\n              <option value=\\\"1\\\">Most Played</option>\\n              <option value=\\\"2\\\">Recently added</option>\\n            </select>\\n          </div>\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary text-center\\\">Add</button>\\n        </form>\\n  </div>\\n  <div class=\\\"container mt-5\\\">\\n    <h3 class=\\\"text-center mb-3\\\">Here are the song listings:</h3>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-4\\\" *ngFor=\\\"let songs of songData\\\">\\n        <div class=\\\"music_card text-center\\\">\\n          <div class=\\\"image\\\">\\n              <img src=\\\"https://i.ya-webdesign.com/images/music-icon-png-6.png\\\" alt=\\\"music-icon\\\" class=\\\"img-fluid\\\">\\n          </div>\\n          <div class=\\\"music_name mb-3 \\\">\\n              {{songs.name}}\\n          </div>\\n          <div class=\\\"artist_name mb-2\\\">\\n              {{songs.artist}}\\n          </div>\\n          <div class=\\\"playlist_name mb-2\\\">\\n            {{songs.playlist.title}}\\n          </div>\\n          <div class=\\\"delete_button\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deleteSong(songs.id)\\\">Delete</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<router-outlet></router-outlet>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { SongsService } from './songs.service';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'songsplaylist';\n  songData: any;\n  newSong: any;\n  addSong = new FormGroup({\n    songname: new FormControl(''),\n    artiste: new FormControl(''),\n    playlist: new FormControl('')\n  })\n  constructor(\n    private songs: SongsService\n  ) {\n\n  }\n  ngOnInit() {\n    this.songs.getSongs().subscribe(data=>{\n      this.songData=data;\n      console.log(this.songData);\n    })\n  }\n  addSongs(){\n    this.newSong={\n      name: this.addSong.get('songname').value,\n      artist: this.addSong.get('artiste').value,\n      playlist: this.addSong.get('playlist').value,\n    }\n    this.songs.addSong(this.newSong).subscribe(result=>{\n      console.log(result);\n      alert(\"Song added!\");\n    });\n    setTimeout(function(){ \n      window.location.reload();\n     }, 500);\n    \n  }\n  deleteSong(songId){\n    this.songs.deleteSong(songId);\n    alert(\"Song Deleted!\");\n    this.songs.getSongs().subscribe(data=>{\n      this.songData=data;\n      console.log(this.songData);\n    });\n    \n    setTimeout(function(){ \n      window.location.reload();\n     }, 500);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule , FormsModule  } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient , HttpParams } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SongsService {\n\n  constructor(private http: HttpClient) { }\n  \n  getSongs(){\n    //getting all pet profiles\n    return this.http.get('https://clouda3.herokuapp.com/allsongs');\n  }\n  addSong(songData:any){\n    console.log(\"https://clouda3.herokuapp.com/newsong?name=\"+songData[\"name\"]+\"&artist=\"+songData[\"artist\"]+\"&playlist=\"+songData[\"playlist\"]);\n    return this.http.post(\"https://clouda3.herokuapp.com/newsong?name=\"+songData[\"name\"]+\"&artist=\"+songData[\"artist\"]+\"&playlist=\"+songData[\"playlist\"],songData);\n  }\n  deleteSong(songId:any){\n    this.http.delete(\"https://clouda3.herokuapp.com/deletesong/\"+songId).subscribe(response=>{\n      console.log(response);\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}